# Template file for 'supermin'
pkgname=supermin
version=5.3.4
revision=1
_release_series=5.3-development
build_style=gnu-configure
hostmakedepends="ocaml ocaml-findlib pkg-config e2fsprogs cpio perl"
makedepends="e2fsprogs-devel"
depends="cpio e2fsprogs"
checkdepends="grep"
short_desc="Tool for creating supermin appliances"
maintainer="Andrea Brancaleoni <abc@pompel.me>"
license="GPL-2.0-or-later"
homepage="http://people.redhat.com/~rjones/supermin/"
distfiles="http://download.libguestfs.org/supermin/${_release_series}/supermin-${version}.tar.gz"
checksum=cc0322991bea1fcc6355518474b39e2d4a341f1e2c36fd98f14c3446ef79ff70
nocross=yes

if [ "$XBPS_TARGET_LIBC" = musl ]; then
	makedepends+=" musl-fts-devel"
	LDFLAGS="-lfts"
fi

pre_check() {
	cd tests
	../src/supermin --help
	../src/supermin --version | grep ^supermin
	../src/supermin --list-drivers
#	../src/supermin --list-drivers | grep -v not-detected
	# XXX Hack for Arch.
	if [ -f /etc/arch-release ]; then
	    export SUPERMIN_KERNEL=/boot/vmlinuz-linux
	fi

	tmpdir=`mktemp -d`

	d1=$tmpdir/d1
	d2=$tmpdir/d2
	d3=$tmpdir/d3

	test "$USE_NETWORK" = 1 || USE_INSTALLED=--use-installed

	# We assume 'bash' is a package everywhere.
	../src/supermin -v --prepare $USE_INSTALLED bash -o $d1

	arch="$(uname -m)"

	# Check all supermin-helper formats work.
	../src/supermin -v --build -f chroot --host-cpu $arch $d1 -o $d2
	../src/supermin -v --build -f ext2 --host-cpu $arch $d1 -o $d3

	# Need to chmod $d2 since rm -r can't remove unwritable directories.
	chmod -R +w $d2 ||:
	rm -rf $tmpdir ||:
}
